From e90f72f6a1aa4a0948433b165d06f33757d6d88e Mon Sep 17 00:00:00 2001
From: ahreehong <46465244+ahreehong@users.noreply.github.com>
Date: Thu, 18 Jan 2024 14:38:34 -0800
Subject: [PATCH] Update default values

---
 .../values.schema.json                        |  3 +-
 charts/opentelemetry-collector/values.yaml    | 64 ++-----------------
 2 files changed, 7 insertions(+), 60 deletions(-)

diff --git a/charts/opentelemetry-collector/values.schema.json b/charts/opentelemetry-collector/values.schema.json
index 5d78b61..cd8aab6 100644
--- a/charts/opentelemetry-collector/values.schema.json
+++ b/charts/opentelemetry-collector/values.schema.json
@@ -914,6 +914,5 @@
     "useGOMEMLIMIT": {
       "type": "boolean"
     }
-  },
-  "required": ["mode"]
+  }
 }
diff --git a/charts/opentelemetry-collector/values.yaml b/charts/opentelemetry-collector/values.yaml
index e5df2a6..d74daac 100644
--- a/charts/opentelemetry-collector/values.yaml
+++ b/charts/opentelemetry-collector/values.yaml
@@ -8,7 +8,7 @@ fullnameOverride: ""
 defaultNamespace: "observability"
 
 # Valid values are "daemonset", "deployment", and "statefulset".
-mode: ""
+mode: "daemonset"
 
 # Specify which namespace should be used to deploy the resources into
 namespaceOverride: ""
@@ -88,10 +88,10 @@ configMap:
 # For example, {{ REDACTED_EMAIL }} becomes {{` {{ REDACTED_EMAIL }} `}}.
 config:
   exporters:
-    debug: {}
-    # Will be removed in a future release.
-    # Use the debug exporter instead.
-    logging: {}
+    # Logging will be removed in a future release.
+    # Use the debug exporter instea√•d.
+    logging:
+      loglevel: info
   extensions:
     # The health_check extension is mandatory for this chart.
     # Without the health_check extension the collector will fail the readiness and liveliness probes.
@@ -103,14 +103,6 @@ config:
     # If set to null, will be overridden with values based on k8s resource limits
     memory_limiter: null
   receivers:
-    jaeger:
-      protocols:
-        grpc:
-          endpoint: ${env:MY_POD_IP}:14250
-        thrift_http:
-          endpoint: ${env:MY_POD_IP}:14268
-        thrift_compact:
-          endpoint: ${env:MY_POD_IP}:6831
     otlp:
       protocols:
         grpc:
@@ -125,8 +117,6 @@ config:
             static_configs:
               - targets:
                   - ${env:MY_POD_IP}:8888
-    zipkin:
-      endpoint: ${env:MY_POD_IP}:9411
   service:
     telemetry:
       metrics:
@@ -135,33 +125,15 @@ config:
       - health_check
       - memory_ballast
     pipelines:
-      logs:
-        exporters:
-          - debug
-        processors:
-          - memory_limiter
-          - batch
-        receivers:
-          - otlp
       metrics:
         exporters:
-          - debug
+          - logging
         processors:
           - memory_limiter
           - batch
         receivers:
           - otlp
           - prometheus
-      traces:
-        exporters:
-          - debug
-        processors:
-          - memory_limiter
-          - batch
-        receivers:
-          - otlp
-          - jaeger
-          - zipkin
 
 image:
   # If you want to use the core image `otel/opentelemetry-collector`, you also need to change `command.name` value to `otelcol`.
@@ -254,30 +226,6 @@ ports:
     servicePort: 4318
     hostPort: 4318
     protocol: TCP
-  jaeger-compact:
-    enabled: true
-    containerPort: 6831
-    servicePort: 6831
-    hostPort: 6831
-    protocol: UDP
-  jaeger-thrift:
-    enabled: true
-    containerPort: 14268
-    servicePort: 14268
-    hostPort: 14268
-    protocol: TCP
-  jaeger-grpc:
-    enabled: true
-    containerPort: 14250
-    servicePort: 14250
-    hostPort: 14250
-    protocol: TCP
-  zipkin:
-    enabled: true
-    containerPort: 9411
-    servicePort: 9411
-    hostPort: 9411
-    protocol: TCP
   metrics:
     # The metrics port is disabled by default. However you need to enable the port
     # in order to use the ServiceMonitor (serviceMonitor.enabled) or PodMonitor (podMonitor.enabled).
-- 
2.40.0

